-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/hdl_ofdm_tx/TWDLMULT_SDNF1_3_block6.vhd
-- Created: 2018-02-27 13:25:18
-- 
-- Generated by MATLAB 9.3 and HDL Coder 3.11
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: TWDLMULT_SDNF1_3_block6
-- Source Path: hdl_ofdm_tx/ifft/TWDLMULT_SDNF1_3
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY TWDLMULT_SDNF1_3_block6 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_16_0                        :   IN    std_logic;
        dout_14_re                        :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En13
        dout_14_im                        :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En13
        dout_16_re                        :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En13
        dout_16_im                        :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En13
        dout_2_vld                        :   IN    std_logic;
        twdl_3_15_re                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        twdl_3_15_im                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        twdl_3_16_re                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        twdl_3_16_im                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        twdl_3_16_vld                     :   IN    std_logic;
        softReset                         :   IN    std_logic;
        twdlXdin_15_re                    :   OUT   std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
        twdlXdin_15_im                    :   OUT   std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
        twdlXdin_16_re                    :   OUT   std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
        twdlXdin_16_im                    :   OUT   std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
        twdlXdin_15_vld                   :   OUT   std_logic
        );
END TWDLMULT_SDNF1_3_block6;


ARCHITECTURE rtl OF TWDLMULT_SDNF1_3_block6 IS

  -- Component Declarations
  COMPONENT Complex3Multiply_block9
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_16_0                      :   IN    std_logic;
          din1_re_dly3                    :   IN    std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
          din1_im_dly3                    :   IN    std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
          din1_vld_dly3                   :   IN    std_logic;
          twdl_3_15_re                    :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_3_15_im                    :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          softReset                       :   IN    std_logic;
          twdlXdin_15_re                  :   OUT   std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
          twdlXdin_15_im                  :   OUT   std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
          twdlXdin1_vld                   :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Complex3Multiply_block10
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_16_0                      :   IN    std_logic;
          din2_re_dly3                    :   IN    std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
          din2_im_dly3                    :   IN    std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
          di2_vld_dly3                    :   IN    std_logic;
          twdl_3_16_re                    :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_3_16_im                    :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          softReset                       :   IN    std_logic;
          twdlXdin_16_re                  :   OUT   std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
          twdlXdin_16_im                  :   OUT   std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
          twdlXdin2_vld                   :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Complex3Multiply_block9
    USE ENTITY work.Complex3Multiply_block9(rtl);

  FOR ALL : Complex3Multiply_block10
    USE ENTITY work.Complex3Multiply_block10(rtl);

  -- Signals
  SIGNAL dout_14_re_signed                : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL din_re                           : signed(18 DOWNTO 0);  -- sfix19_En13
  SIGNAL din1_re_dly1                     : signed(18 DOWNTO 0);  -- sfix19_En13
  SIGNAL din1_re_dly2                     : signed(18 DOWNTO 0);  -- sfix19_En13
  SIGNAL dout_14_im_signed                : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL din_im                           : signed(18 DOWNTO 0);  -- sfix19_En13
  SIGNAL din1_im_dly1                     : signed(18 DOWNTO 0);  -- sfix19_En13
  SIGNAL din1_im_dly2                     : signed(18 DOWNTO 0);  -- sfix19_En13
  SIGNAL din1_re_dly3                     : signed(18 DOWNTO 0);  -- sfix19_En13
  SIGNAL din1_im_dly3                     : signed(18 DOWNTO 0);  -- sfix19_En13
  SIGNAL din1_vld_dly1                    : std_logic;
  SIGNAL din1_vld_dly2                    : std_logic;
  SIGNAL din1_vld_dly3                    : std_logic;
  SIGNAL twdlXdin_15_re_tmp               : std_logic_vector(18 DOWNTO 0);  -- ufix19
  SIGNAL twdlXdin_15_im_tmp               : std_logic_vector(18 DOWNTO 0);  -- ufix19
  SIGNAL twdlXdin1_vld                    : std_logic;
  SIGNAL dout_16_re_signed                : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL din_re_1                         : signed(18 DOWNTO 0);  -- sfix19_En13
  SIGNAL din2_re_dly1                     : signed(18 DOWNTO 0);  -- sfix19_En13
  SIGNAL din2_re_dly2                     : signed(18 DOWNTO 0);  -- sfix19_En13
  SIGNAL dout_16_im_signed                : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL din_im_1                         : signed(18 DOWNTO 0);  -- sfix19_En13
  SIGNAL din2_im_dly1                     : signed(18 DOWNTO 0);  -- sfix19_En13
  SIGNAL din2_im_dly2                     : signed(18 DOWNTO 0);  -- sfix19_En13
  SIGNAL din2_re_dly3                     : signed(18 DOWNTO 0);  -- sfix19_En13
  SIGNAL din2_im_dly3                     : signed(18 DOWNTO 0);  -- sfix19_En13
  SIGNAL di2_vld_dly1                     : std_logic;
  SIGNAL di2_vld_dly2                     : std_logic;
  SIGNAL di2_vld_dly3                     : std_logic;
  SIGNAL twdlXdin_16_re_tmp               : std_logic_vector(18 DOWNTO 0);  -- ufix19
  SIGNAL twdlXdin_16_im_tmp               : std_logic_vector(18 DOWNTO 0);  -- ufix19

BEGIN
  u_MUL3_1 : Complex3Multiply_block9
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              din1_re_dly3 => std_logic_vector(din1_re_dly3),  -- sfix19_En13
              din1_im_dly3 => std_logic_vector(din1_im_dly3),  -- sfix19_En13
              din1_vld_dly3 => din1_vld_dly3,
              twdl_3_15_re => twdl_3_15_re,  -- sfix16_En14
              twdl_3_15_im => twdl_3_15_im,  -- sfix16_En14
              softReset => softReset,
              twdlXdin_15_re => twdlXdin_15_re_tmp,  -- sfix19_En13
              twdlXdin_15_im => twdlXdin_15_im_tmp,  -- sfix19_En13
              twdlXdin1_vld => twdlXdin1_vld
              );

  u_MUL3_2 : Complex3Multiply_block10
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              din2_re_dly3 => std_logic_vector(din2_re_dly3),  -- sfix19_En13
              din2_im_dly3 => std_logic_vector(din2_im_dly3),  -- sfix19_En13
              di2_vld_dly3 => di2_vld_dly3,
              twdl_3_16_re => twdl_3_16_re,  -- sfix16_En14
              twdl_3_16_im => twdl_3_16_im,  -- sfix16_En14
              softReset => softReset,
              twdlXdin_16_re => twdlXdin_16_re_tmp,  -- sfix19_En13
              twdlXdin_16_im => twdlXdin_16_im_tmp,  -- sfix19_En13
              twdlXdin2_vld => twdlXdin_15_vld
              );

  dout_14_re_signed <= signed(dout_14_re);

  din_re <= resize(dout_14_re_signed, 19);

  intdelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      din1_re_dly1 <= to_signed(16#00000#, 19);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        din1_re_dly1 <= din_re;
      END IF;
    END IF;
  END PROCESS intdelay_process;


  intdelay_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      din1_re_dly2 <= to_signed(16#00000#, 19);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        din1_re_dly2 <= din1_re_dly1;
      END IF;
    END IF;
  END PROCESS intdelay_1_process;


  dout_14_im_signed <= signed(dout_14_im);

  din_im <= resize(dout_14_im_signed, 19);

  intdelay_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      din1_im_dly1 <= to_signed(16#00000#, 19);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        din1_im_dly1 <= din_im;
      END IF;
    END IF;
  END PROCESS intdelay_2_process;


  intdelay_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      din1_im_dly2 <= to_signed(16#00000#, 19);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        din1_im_dly2 <= din1_im_dly1;
      END IF;
    END IF;
  END PROCESS intdelay_3_process;


  intdelay_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      din1_re_dly3 <= to_signed(16#00000#, 19);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        din1_re_dly3 <= din1_re_dly2;
      END IF;
    END IF;
  END PROCESS intdelay_4_process;


  intdelay_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      din1_im_dly3 <= to_signed(16#00000#, 19);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        din1_im_dly3 <= din1_im_dly2;
      END IF;
    END IF;
  END PROCESS intdelay_5_process;


  intdelay_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      din1_vld_dly1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        din1_vld_dly1 <= dout_2_vld;
      END IF;
    END IF;
  END PROCESS intdelay_6_process;


  intdelay_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      din1_vld_dly2 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        din1_vld_dly2 <= din1_vld_dly1;
      END IF;
    END IF;
  END PROCESS intdelay_7_process;


  intdelay_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      din1_vld_dly3 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        din1_vld_dly3 <= din1_vld_dly2;
      END IF;
    END IF;
  END PROCESS intdelay_8_process;


  dout_16_re_signed <= signed(dout_16_re);

  din_re_1 <= resize(dout_16_re_signed, 19);

  intdelay_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      din2_re_dly1 <= to_signed(16#00000#, 19);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        din2_re_dly1 <= din_re_1;
      END IF;
    END IF;
  END PROCESS intdelay_9_process;


  intdelay_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      din2_re_dly2 <= to_signed(16#00000#, 19);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        din2_re_dly2 <= din2_re_dly1;
      END IF;
    END IF;
  END PROCESS intdelay_10_process;


  dout_16_im_signed <= signed(dout_16_im);

  din_im_1 <= resize(dout_16_im_signed, 19);

  intdelay_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      din2_im_dly1 <= to_signed(16#00000#, 19);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        din2_im_dly1 <= din_im_1;
      END IF;
    END IF;
  END PROCESS intdelay_11_process;


  intdelay_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      din2_im_dly2 <= to_signed(16#00000#, 19);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        din2_im_dly2 <= din2_im_dly1;
      END IF;
    END IF;
  END PROCESS intdelay_12_process;


  intdelay_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      din2_re_dly3 <= to_signed(16#00000#, 19);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        din2_re_dly3 <= din2_re_dly2;
      END IF;
    END IF;
  END PROCESS intdelay_13_process;


  intdelay_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      din2_im_dly3 <= to_signed(16#00000#, 19);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        din2_im_dly3 <= din2_im_dly2;
      END IF;
    END IF;
  END PROCESS intdelay_14_process;


  intdelay_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      di2_vld_dly1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        di2_vld_dly1 <= dout_2_vld;
      END IF;
    END IF;
  END PROCESS intdelay_15_process;


  intdelay_16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      di2_vld_dly2 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        di2_vld_dly2 <= di2_vld_dly1;
      END IF;
    END IF;
  END PROCESS intdelay_16_process;


  intdelay_17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      di2_vld_dly3 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_16_0 = '1' THEN
        di2_vld_dly3 <= di2_vld_dly2;
      END IF;
    END IF;
  END PROCESS intdelay_17_process;


  twdlXdin_15_re <= twdlXdin_15_re_tmp;

  twdlXdin_15_im <= twdlXdin_15_im_tmp;

  twdlXdin_16_re <= twdlXdin_16_re_tmp;

  twdlXdin_16_im <= twdlXdin_16_im_tmp;

END rtl;

